#!/usr/bin/env bash

function dependency_test (){

    if ! type cmus >/dev/null 2>&1; then

        printf "\033c"
        echo ""
        echo "Cmus Is Not Installed!"
        echo ""
        echo "Cmus Is An Amazing Console Audio Player!"
        echo "Please Install Cmus Using Your Package-manager!"
        echo ""

        exit_cmus_lyrics

    elif ! type wget >/dev/null 2>&1; then

        printf "\033c"
        echo ""
        echo "Wget Is Not Installed!"
        echo "Please Install Wget Using Your Package-manager!"
        echo ""

        exit_cmus_lyrics

    elif ! type perl >/dev/null 2>&1; then

        printf "\033c"
        echo ""
        echo "Perl Is Not Installed!"
        echo ""
        echo "Perl Is A Required Dependency!"
        echo "Please Install Perl Using Your Package-manager!"
        echo ""

        exit_cmus_lyrics

    fi

    perl -MURI::Escape -e 'print "$URI::Escape::VERSION\n";' &> /dev/null

    RETVAL=$?

    if [ "$RETVAL" -ne 0 ]; then

        printf "\033c"
        echo ""
        echo "Perl Module \"URI::Escape\" Is Not Installed!"
        echo ""
        echo "Module \"URI::Escape\" Is A Required Dependency!"
        echo "Please Open The Following Link For More Info,"
        echo ""
        echo -e '\e[38;5;82m'"http://stackoverflow.com/q/65865"
        echo ""
        tput sgr0

        exit_cmus_lyrics

    else

        directory_check

    fi

}

function directory_check (){

    WORK_DIRECTORY="/tmp/cmus_lyrics/"

    if [ -d "$WORK_DIRECTORY" ]; then

        rm -r "$WORK_DIRECTORY"

        cmus_check

    else

        cmus_check

    fi

}

function cmus_check (){

    CMUSQ=$(cmus-remote -Q 2>/dev/null)

    if [[ -z "$CMUSQ" ]]; then

        printf "\033c"
        echo ""
        echo "Cmus Is Not Running!"
        echo "To Start Cmus, type \"cmus\" In Your Terminal!"
        echo ""

        exit_cmus_lyrics

    else

        cmus_status

    fi

}

function cmus_status (){

    CM_ST=$(cmus-remote -Q 2>/dev/null | grep "stopped")

    if [[ -n "$CM_ST" ]]; then

        printf "\033c"
        echo ""
        echo "Cmus Is Not Playing Anything!"
        echo ""

        exit_cmus_lyrics

    else

        tag_check

    fi

}

function tag_check (){

    TITLE=$(cmus-remote -Q 2>/dev/null | grep -m 1 'title' | cut -d " " -f 3-)

    if [[ -z "$TITLE" ]]; then

        printf "\033c"

        echo ""
        echo "Cmus can't get the title field from the file metadata!"
        echo "More information on this subject can be obtained here,"
        echo -e '\e[38;5;82m'"https://en.wikipedia.org/wiki/ID3"
        echo -e '\e[38;5;82m'"https://en.wikipedia.org/wiki/Tag_editor"
        echo ""
        tput sgr0

        exit_cmus_lyrics

    fi

    ARTIST=$(cmus-remote -Q 2>/dev/null | grep -m 1 'artist' | cut -d " " -f 3-)

    if [[ -z "$ARTIST" ]]; then

        printf "\033c"

        echo ""
        echo "Cmus can't get the artist field from the file metadata!"
        echo "More information on this subject can be obtained here,"
        echo -e '\e[38;5;82m'"https://en.wikipedia.org/wiki/ID3"
        echo -e '\e[38;5;82m'"https://en.wikipedia.org/wiki/Tag_editor"
        echo ""
        tput sgr0

        exit_cmus_lyrics

    else

        get_lyrics

    fi

}

function get_lyrics (){

    test -d "$WORK_DIRECTORY" || mkdir -p "$WORK_DIRECTORY"
    ARTIST1=$(cmus-remote -Q 2>/dev/null | grep -m 1 'artist' | cut -d " " -f 3-)
    TITLE1=$(cmus-remote -Q 2>/dev/null | grep -m 1 'title' | cut -d " " -f 3-)
    ARTIST2=$(echo "$ARTIST1" | perl -MURI::Escape -ne 'chomp;print uri_escape($_),"\n"')
    TITLE2=$(echo "$TITLE1" | perl -MURI::Escape -ne 'chomp;print uri_escape($_),"\n"')
    FILE_HASH=$(echo -n "$TITLE1$ARTIST1" | base32)
    FILE_HASH2=$(echo -n "$FILE_HASH" | sha256sum | awk '{print $1}')
    LYRIC_FILE="$WORK_DIRECTORY/$FILE_HASH2"


    if [ -f "$LYRIC_FILE" ]; then

        sleep 1
        cmus_check

    elif ! wget --user-agent="Mozilla/5.0 Gecko/20100101" --no-check-certificate --quiet --timeout=30 -O "$LYRIC_FILE" "https://makeitpersonal.co/lyrics?artist=$ARTIST2&title=$TITLE2"; then

        printf "\033c"
        echo ""
        echo "Can Not Connect To The Site \"makeitpersonal\"!"
        echo "Make Sure Your Internet Connection Is Active!"
        echo "If The Problem Persists You Can Report It At,"
        echo "GitHub Repository Of The Project By Creating,"
        echo "An Issue There. Here Is The Link To The Repo,"
        echo ""
        echo -e '\e[38;5;82m'"https://github.com/hakerdefo/cmus-lyrics"
        echo ""
        tput sgr0
        echo "If You Don't Use GitHub You Can Report It By,"
        echo "Emailing The Author At The Following Address,"
        echo ""
        echo -e '\e[38;5;82m'"hakerdefo (at) gmail (dot) com"
        echo ""
        tput sgr0

        exit_cmus_lyrics

    else

        printf '\n%s\n%s\n' "$TITLE1 - $ARTIST1" "$(cat "$LYRIC_FILE")" >"$LYRIC_FILE"
        printf '\n' >> "$LYRIC_FILE"
        stty size | perl -ale 'print "-"x$F[1]' >> "$LYRIC_FILE"
        cat "$LYRIC_FILE"

        sleep 1
        cmus_check

    fi

}

function exit_cmus_lyrics (){

    if [ -d "$WORK_DIRECTORY" ]; then

        rm -r "$WORK_DIRECTORY"

    fi

    exit

}

while :
do
    dependency_test
done
